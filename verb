#!/usr/bin/env python

import os
import sys
import argparse

from gi.repository import Gio

import cana.data
from cana.ui import VerbWindow
from cana.app import Application

def parse(app, verblist):
    verbs = []
    for f in verblist:
        v = cana.data.parse(app, f)
        if v:
            verbs.append(v)

    return verbs

def activate(app, verbs=None):
    if verbs is None:
        verbs = parse(app, os.listdir('verbs'))

    try:
        window = VerbWindow(verbs)
    except IndexError:
        print 'no verbs found'
        return

    window.fullscreen()
    app.add_window(window)
    window.show()

def opened(app, files, hint, data):
    verbs = parse(app, [x.get_basename() for x in files])
    activate(app, verbs)

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--moods', metavar='mood', nargs='*',
                        help='moods to test (default: all)')
    parser.add_argument('--tenses', metavar='tense', nargs='*',
                        help='tenses to test (default: all)')
    parser.add_argument('verbs', nargs='*',
                        help='verbs to test (default: random)')
    args = parser.parse_args()

    app = Application(args)
    app.set_flags(Gio.ApplicationFlags.HANDLES_OPEN)

    app.connect('activate', activate)
    app.connect('open', opened)

    # use this instead of sys.argv because argparse is used to parse
    # command line args instead of gapplication. so ugly.
    app.run([sys.argv[0]] + args.verbs)
